-- Doors Entity Script (spawn ·ªü ph√≤ng hi·ªán t·∫°i trong game - d√πng LatestRoom)
-- Thay YOUR_ENTITY_MODEL_ID b·∫±ng AssetId c·ªßa model th·ª±c th·ªÉ

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local localPlayer = Players.LocalPlayer
local entityModel = game:GetObjects("rbxassetid://71957559907014")[1]

-- üîπ L·∫•y ph√≤ng hi·ªán t·∫°i trong game (ph√≤ng v·ª´a ƒë∆∞·ª£c m·ªü)
local function getLatestOpenedRoom()
    local gameData = ReplicatedStorage:FindFirstChild("GameData")
    local currentRooms = workspace:FindFirstChild("CurrentRooms")
    if not (gameData and currentRooms) then return nil, 0 end

    local latestRoomNum = gameData:FindFirstChild("LatestRoom") and gameData.LatestRoom.Value
    if not latestRoomNum then return nil, 0 end

    local room = currentRooms:FindFirstChild(tostring(latestRoomNum))
    if room then
        return room, latestRoomNum
    else
        -- N·∫øu ph√≤ng ch∆∞a load ho√†n to√†n, t√¨m g·∫ßn nh·∫•t nh·ªè h∆°n
        for i = latestRoomNum, 1, -1 do
            local fallback = currentRooms:FindFirstChild(tostring(i))
            if fallback then
                return fallback, i
            end
        end
    end
    return nil, 0
end

-- Tween t·ªõi v·ªã tr√≠
local function tweenTo(part, pos, speed)
    local dist = (part.Position - pos).Magnitude
    local tween = TweenService:Create(
        part,
        TweenInfo.new(dist/speed, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(pos)}
    )
    tween:Play()
    tween.Completed:Wait()
end

-- Rung camera
local lastShake = 0
local function shakeCamera(strength)
    local cam = workspace.CurrentCamera
    if not cam then return end
    if tick() - lastShake < 0.3 then return end
    lastShake = tick()

    local original = cam.CFrame
    for _ = 1,3 do
        cam.CFrame = original * CFrame.Angles(
            math.rad(math.random(-strength,strength)),
            math.rad(math.random(-strength,strength)),
            0
        )
        task.wait(0.05)
    end
    cam.CFrame = original
end

-- L·∫•y gi·ªØa ph√≤ng
local function getRoomMiddle(room)
    local entrance = room:FindFirstChild("RoomEntrance")
    local exit = room:FindFirstChild("RoomExit")
    if entrance and exit then
        return (entrance.Position + exit.Position) / 2
    end
    local fallback = entrance or exit or room:FindFirstChildWhichIsA("Part")
    return fallback and fallback.Position or Vector3.new(0,5,0)
end

-- Spawn entity
local function spawnEntity()
    local currentRoom, currentNum = getLatestOpenedRoom()
    if not currentRoom then
        warn("Kh√¥ng t√¨m th·∫•y ph√≤ng hi·ªán t·∫°i (LatestRoom) ƒë·ªÉ spawn th·ª±c th·ªÉ")
        return
    end

    local entity = entityModel:Clone()
    entity.Parent = workspace

    local rootPart = entity:FindFirstChild("HumanoidRootPart")
        or entity.PrimaryPart
        or entity:FindFirstChildWhichIsA("BasePart")
    if not rootPart then
        warn("Entity model kh√¥ng c√≥ BasePart n√†o ƒë·ªÉ l√†m root")
        entity:Destroy()
        return
    end

    -- ‚úÖ Spawn ·ªü gi·ªØa ph√≤ng hi·ªán t·∫°i (ph√≤ng LatestRoom)
    local middle = getRoomMiddle(currentRoom)
    rootPart.CFrame = CFrame.new(middle + Vector3.new(0,1,0))

    task.wait(2)

    -- Hitbox h√∫t m√°u
    local hitbox = Instance.new("Part")
    hitbox.Size = Vector3.new(15,15,15)
    hitbox.Anchored = false
    hitbox.CanCollide = false
    hitbox.Transparency = 1
    hitbox.Massless = true
    hitbox.Parent = entity

    local weld = Instance.new("WeldConstraint", hitbox)
    weld.Part0 = hitbox
    weld.Part1 = rootPart

    local pulling, damaging = {}, {}
    local hbConn

    local function destroyEntity()
        if hbConn then hbConn:Disconnect() end
        for _, bp in pairs(pulling) do if bp then bp:Destroy() end end
        if entity then entity:Destroy() end
    end

    hbConn = RunService.Heartbeat:Connect(function()
        if not entity.Parent then hbConn:Disconnect() return end
        for _, plr in pairs(Players:GetPlayers()) do
            if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local hrp = plr.Character.HumanoidRootPart
                local hum = plr.Character:FindFirstChildOfClass("Humanoid")
                if not hum then continue end

                local dist = (rootPart.Position - hrp.Position).Magnitude

                if dist <= 15 and hitbox.Parent then
                    if not damaging[plr] then
                        damaging[plr] = true
                        task.spawn(function()
                            while damaging[plr] and entity.Parent and hitbox.Parent do
                                if hum and hum.Health > 0 then
                                    hum:TakeDamage(2)
                                    if plr == localPlayer then shakeCamera(3) end
                                end
                                if hum and hum.Health <= 0 then
                                    firesignal(game.ReplicatedStorage.RemotesFolder.DeathHint.OnClientEvent,
                                        {"Oh.. Who's now??","What.. Isn't it just Pusher?? How could you die by that entity?!",
                                        "You can't be that dumb..","Why did you not just dodge his ways bruh?",
                                        "Next time, try to do better and use your brain correctly, Dumbass."},
                                        "Blue")

                                    game.ReplicatedStorage.GameStats["Player_".. localPlayer.Name].Total.DeathCause.Value = "Pusher"
                                    destroyEntity()
                                    return
                                end
                                task.wait(0.5)
                            end
                        end)
                    end
                    if not pulling[plr] then
                        local bp = Instance.new("BodyPosition")
                        bp.MaxForce = Vector3.new(10000,10000,10000)
                        bp.P, bp.D = 3000, 500
                        bp.Position = rootPart.Position
                        bp.Parent = hrp
                        pulling[plr] = bp
                    else
                        pulling[plr].Position = rootPart.Position
                    end
                else
                    if pulling[plr] then pulling[plr]:Destroy() pulling[plr] = nil end
                    if damaging[plr] then damaging[plr] = nil end
                    if plr == localPlayer and dist <= 30 then shakeCamera(1) end
                end
            end
        end
    end)

    -- ƒêi ng∆∞·ª£c 3 ph√≤ng
    for i = 0,3 do
        local room = workspace.CurrentRooms:FindFirstChild(tostring(currentNum - i))
        if room then
            local ent = room:FindFirstChild("RoomEntrance")
            local ex = room:FindFirstChild("RoomExit")
            if ent and ex then
                if i == 0 then
                    tweenTo(rootPart, ent.Position + Vector3.new(0,1,0), 20)
                else
                    rootPart.CFrame = CFrame.new(ex.Position + Vector3.new(0,1,0))
                    tweenTo(rootPart, ent.Position + Vector3.new(0,1,0), 20)
                end
            end
        end
    end

    if hbConn then hbConn:Disconnect() end
    if hitbox and hitbox.Parent then hitbox:Destroy() end
    task.wait(5)
    destroyEntity()
end

spawnEntity()
